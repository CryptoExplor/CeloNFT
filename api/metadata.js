import { kv } from "@vercel/kv";

export default async function handler(req, res) {
  // Extract the NFT ID from the request query
  const { id } = req.query;

  // Try to fetch the stored traits from Vercel KV
  let traits;
  try {
    traits = await kv.get(`nft:${id}`);
  } catch (error) {
    console.error("KV get error:", error);
    return res.status(500).json({ error: "Could not retrieve NFT traits." });
  }


  // If no traits are found for the ID, return a 404 error
  if (!traits) {
    return res.status(404).json({ error: "NFT traits not found â€” mint first." });
  }

  // Construct the NFT metadata object
  const metadata = {
    name: `Celo NFT #${id}`,
    description: "A dynamic CELO NFT with rarity-based animated border.",
    // The image is dynamically generated by another API route
    image: `https://your-project.vercel.app/api/image/${id}`,
    attributes: [
      { trait_type: "Rarity", value: traits.rarity },
      { trait_type: "Color", value: traits.color }
    ]
  };

  // Send the metadata as a JSON response
  res.status(200).json(metadata);
}
